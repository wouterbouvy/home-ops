[env]
OMNICONFIG = "{{config_root}}/omniconfig"
KUBECONFIG = "{{config_root}}/kubeconfig"
TALOSCONFIG = "{{config_root}}/talosconfig"

[vars]
cluster = 'default'

[tools]
"aqua:siderolabs/talos" = "1.10.6"
"aqua:siderolabs/omni/omnictl" = "1.0.0"
"aqua:kubernetes/kubectl" = "1.33.2"
"aqua:helmfile/helmfile" = "1.1.5"
"aqua:cilium/cilium-cli" = "0.18.6"
"aqua:jqlang/jq" = "1.8.1"
"aqua:1password/cli" = "v2.31.1"
"aqua:kubevirt/kubevirt/virtctl" = "v1.6.0"

[tasks.omni-validate]
description = "Validate Omni configuration"
run = [
    "omnictl cluster template validate -f omni-mgmt.yaml",
]
dir = "kubernetes/bootstrap/talos"

[tasks.omni-sync]
description = 'Sync cluster'
run = [
    "omnictl cluster template sync -f omni-mgmt.yaml",
    "omnictl talosconfig --merge=false --force $TALOSCONFIG",
    "omnictl kubeconfig -c management --merge=false --force $KUBECONFIG"
]
dir = "kubernetes/bootstrap/talos"
depends = ["omni-validate"]

[tasks.omni-bootstrap]
description = 'Bootstrap cluster'
run = [
    "until kubectl --kubeconfig $KUBECONFIG --context=k5s-home-ops-management wait --for=condition=Ready=False nodes --all --timeout=600s; do sleep 10; done",
    "mise run omni-1password-bootstrap",
    "helmfile --kubeconfig $KUBECONFIG --kube-context k5s-home-ops-management --file helmfile.yaml apply --skip-diff-on-install --suppress-diff",
    "kubectl --namespace argo-system apply --server-side --filename argo-apps.yaml"
]
depends = ["omni-sync"]
dir = "kubernetes/bootstrap"

[tasks.omni-1password-bootstrap]
description = "Create 1Password token for External Secrets Operator"
run = [
    "kubectl get namespace external-secrets || kubectl create namespace external-secrets",
    "op read op://k8s-secrets/kjbt5chc4fgrgsian5acx2f74u/credential --out-file 1password-token",
    "kubectl create secret generic 1password-token -n external-secrets --from-file=token=1password-token --dry-run=client -o yaml | kubectl apply -f -",
    "rm 1password-token",
    "op signout",
]

[tasks.omni-reset]
description = 'Reset cluster'
run = "omnictl cluster template delete -f omni-mgmt.yaml"
dir = "kubernetes/bootstrap/talos"

[tasks.omni-wipedisks]
description = 'Wipe disks'
run = [
    "talosctl -n 10.0.8.40 wipe disk sda --drop-partition",
    "talosctl -n 10.0.8.50 wipe disk sda --drop-partition",
    "talosctl -n 10.0.8.60 wipe disk sda --drop-partition"
]

[tasks.omni-reboot]
description = 'Reboot nodes'
run = [
    "talosctl -n 10.0.8.40 reboot",
    "talosctl -n 10.0.8.50 reboot",
    "talosctl -n 10.0.8.60 reboot"
]